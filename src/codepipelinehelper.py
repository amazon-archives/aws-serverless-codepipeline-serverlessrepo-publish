"""CodePipeline helper for putting job execution result."""

import lambdalogging

import boto3

LOG = lambdalogging.getLogger(__name__)

CODEPIPELINE = boto3.client('codepipeline')


def put_job_success(job_id, sar_response):
    """Notify AWS CodePipeline of a successful job.

    Arguments:
        job_id {str} -- The unique ID for the job generated by AWS CodePipeline
        sar_response {dict} -- The result from invoking serverlessrepo.publish_application()
    """
    LOG.info('Putting job success result...')
    CODEPIPELINE.put_job_success_result(
        jobId=job_id,
        executionDetails={
            'summary': str(sar_response),
            'percentComplete': 100
        }
    )


def put_job_failure(job_id, e):
    """Notify AWS CodePipeline of a failed job.

    Arguments:
        job_id {str} -- The unique ID for the job generated by AWS CodePipeline
        e {Exception} -- The exception from invoking serverlessrepo.publish_application()
    """
    LOG.info('Putting job failure result...')
    CODEPIPELINE.put_job_failure_result(
        jobId=job_id,
        failureDetails={
            'type': 'JobFailed',
            'message': str(e)
        }
    )
